-- -*- mode: lua -*-

-- MIDI map for the Hercules DJ Control. Albert Gr√§f <agggraef@gmail.com>, 2024

--[[

   This is preliminary, to complement the hard-wired controls with some
   essential functions. It also serves as a brief rundown of the available
   features, while proper documentation of the DJ Control support in Raptor
   still needs to be written.

   As with the other controller mappings, you can use this by copying the
   djcontrol.map file to midi.map and making sure that your DJ Control device
   is hooked up to Pd's second MIDI input port.

   NOTES:

   The present implementation only supports (up to) two decks. This should
   hopefully suffice for the present DJ controller series by Hercules, as even
   their flagship controllers have no more than 2 decks, AFAICT.

   IMPORTANT: To enable the deck-specific features, you need to assign a deck
   number to each raptor instance, which can be done in the init subpatch, or
   by sending the init subpatch a corresponding 'deck' message in an ensemble
   patch (see raptors2.pd for an example). The possible 'deck' values are -1
   (decks are disabled, only the global controls are available), 0 ("omni"
   mode, all decks send to all raptor instances, as with a regular control
   surface), 1 and 2 (assigns the raptor instance to the left or right deck,
   respectively).

   Also note that the available modes and number of pads vary with the
   particular device version. Recent Hercules DJ Control devices should give
   you at least two mode buttons and four pads, which is what the Raptor
   implementation was designed to work with. (This has only been tested on the
   DJ Control Inpulse 200 MK2 so far, which is the only device that I have
   right now. If you can contribute adjustments for other types of DJ
   controllers, please get in touch!)

   HARD-WIRED CONTROLS:

   These are implemented in Raptor and thus can't be changed using MIDI
   learn. True to the nature of these controllers, the DJ Control
   implementation in Raptor has a lot of fancy performance controls that are
   not readily available on other control surfaces. Here is what's currently
   on offer:

   - BROWSER encoder for preset selection (use SHIFT to restrict to the
     currently selected instance)
   - volume fader and filter knob (mapped to CC7 = volume and CC8 = balance)
   - cross fade control, implemented by tying into the volume control
   - jog wheels for scrubbing (pos/anacrusis)
   - VINYL (enable/disable scrubbing)
   - SYNC (set pos to 0) and CUE (reset the current playback pos to anacrusis)
   - mode 1 (HOT CUE) pads (cue a given bar of the loop during loop playback)
   - mode 2 (STEMS/LOOP) pads (select Raptor instances a.k.a. ccmaster)

   Note that Raptor is MIDI-only, so the cross fader, volume, and balance
   controls are effectively 7 bit and rely on what your synthesizer offers;
   don't expect any miracles. Also note that the cross fader will only be
   active in raptor instances with a deck number (1 or 2), otherwise it can be
   remapped using MIDI learn.

   The HOT CUE pads have two different functions depending on whether they are
   used while holding the shift key. When shifted, the pads relocate to the
   beginning of the bar immediately, otherwise they do a smooth transition
   without changing the position in the bar. These controls are only active
   during loop playback, and can be remapped using MIDI learn in non-loop
   mode.

   JOG WHEELS:

   If needed, you can change the responsiveness of the jog wheels with the
   djcontrol_scrub_factor variable in raptor.pd_lua.

   Due to the fact that Raptor deals with bars and beats rather than samples,
   there are some notable differences to standard DJ software. First,
   scrubbing is *always* quantized to beats. Second, Raptor doesn't actually
   have a "CDJ" mode; if you want to speed things up or slow them down, you'll
   have to use the tempo control instead.

   Therefore the VINYL control (SHIFT+LOOP on some devices) merely determines
   whether the jog wheels are active (and scrubbing enabled) during playback.
   (They are always on when transport is stopped.) By default, the jog wheels
   are off during playback, which ensures that you don't inadvertently move
   the playback position by accidentally hitting a jog wheel. Use the VINYL
   buttons to toggle this option separately for each deck.

   Other than that, the jog wheels work pretty much like you'd expect them to
   on a DJ controller. That is, touching the top of the jog wheel temporarily
   suspends playback, and moving the jog wheel from ring or top starts
   scrubbing, which changes the playback position. In normal playback, or when
   transport is stopped, this sets the playback position and the anacrusis,
   thus movements are confined to a single bar. If a loop is currently
   playing, it adjusts the playback position within the loop instead, so that
   you can relocate to any bar and beat in the loop. In any case, the jog
   wheel acts as a bipolar control; if it goes negative, that means that the
   position is relative to the *end* of the bar or loop (-1 denotes the last
   beat, -2 the second-last, etc.) .

   FEEDBACK:

   This is also hard-wired, and will only work if you also connect the DJ
   Control device to Pd's second MIDI *output*. It gives some feedback about
   playback (lighting up the PLAY button on the deck which is the time master,
   indicating the right button to press in order to stop transport), mute
   status (on the PFL a.k.a. headphone buttons in the mixer section), loop
   playback status (on the LOOP buttons), and vinyl a.k.a. scrubbing status
   (on the VINYL or shifted LOOP buttons; in the latter case you can press
   SHIFT to reveal the current status). Also, the backlight of the big encoder
   pulses following the rhythm, as determined by the actual pulse weights and
   velocities produced by the arpeggiator. (There's no feedback on the pads
   currently, but we might still add that in the future.)

   NOTE: The led could get rather busy with complex meters if we'd simply
   trigger all pulses, so we only do the n most salient pulses, as determined
   by the pulse weights, where the value n is currently hard-coded. I found
   that a value of 7 seems to work best with most common meters. YMMV, so you
   can change that value with the djcontrol_n_pulses variable near the
   beginning of raptor.pd_lua. Setting djcontrol_n_pulses to a very large
   value like 1000 will trigger each and every pulse. Decreasing the value
   gradually thins out the rhythm display while keeping the rhythm intact.
   Setting it to 0 disables the rhythm display.

   MAPPED CONTROLS:

   These *can* be edited below or modified using MIDI learn. The DJ Control
   doesn't have nearly enough knobs and faders for mapping all Raptor panel
   parameters, so we don't even try and focus on the most essential
   performance controls instead. Note that there are actually *two* bindings
   for most of these, one for each deck. The only singleton bindings are for
   the global controls in the center section of the device. Here is a brief
   rundown of the current bindings:

   - PLAY/PAUSE (playback toggles, time subpatch)
   - PFL buttons (mute toggles, panel)
   - MASTER button (global mute toggle, sends to all Raptor instances)
   - BROWSER button (global latch toggle, sends to all Raptor instances)
   - LOOP (loop toggles, panel)
   - IN and OUT (previous/next loop, looper subpatch)
   - LOAD and SHIFT+LOAD (load/save loop file, looper subpatch)
   - TEMPO faders (tempo controls, panel)
   - mode 4 (SAMPLER) pads (mute/latch/bypass toggles, panel)

   Note that the global controls (MASTER and BROWSER buttons) send to all
   Raptor instances by default. As with the BROWSER encoder, you can use SHIFT
   to restrict them to the currently selected instance.

   In addition to the global MASTER mute button, the PFL buttons (those with
   the headphone symbols on them) can be used to mute the Raptor instances for
   each deck. Moreover, I also mapped the first 3 pads in mode 4 for each deck
   to the mute, latch, and bypass toggles in the panel. By these means, all
   the voice controls are available on each deck using the pads, while the
   most important of these (latch, mute) also have shortcuts in the mixer
   section of the device, where they can be accessed more easily.

   While you can change all of these bindings, I'd suggest that you keep at
   least the mapping of the PLAY/PAUSE and PFL buttons as is, since they match
   up with the hard-wired feedback for these buttons.

]]

{
  [8] = {
    [18] = "tempo",
    [19] = "tempo"
  },
  [128] = { [17] = { "latch", true } },
  [130] = { [17] = { "mute", true } },
  [131] = {
    [18] = { "loop", true },
    [19] = { "loop", true }
  },
  [135] = {
    [18] = { "play", true },
    [19] = { "play", true }
  },
  [137] = {
    [18] = { "loop-prev", true },
    [19] = { "loop-prev", true }
  },
  [138] = {
    [18] = { "loop-next", true },
    [19] = { "loop-next", true }
  },
  [140] = {
    [18] = { "mute", true },
    [19] = { "mute", true }
  },
  [141] = {
    [18] = { "loop-load", true },
    [19] = { "loop-load", true },
    [21] = { "loop-save", true },
    [22] = { "loop-save", true }
  },
  [176] = {
    [23] = { "mute", true },
    [24] = { "mute", true }
  },
  [177] = {
    [23] = { "latch", true },
    [24] = { "latch", true }
  },
  [178] = {
    [23] = { "bypass", true },
    [24] = { "bypass", true }
  },
}
